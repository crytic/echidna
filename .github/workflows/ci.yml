name: CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        include:
          - os: ubuntu-latest
            apt-get: autoconf automake libtool
          - os: macos-latest
            brew: automake

    steps:
      - name: Get Packages
        uses: mstksg/get-package@v1
        with:
          brew: ${{ matrix.brew }}
          apt-get: ${{ matrix.apt-get }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.6'

      - name: Cache Local
        id: cache-local
        uses: actions/cache@v1
        with:
          path: ~/.local/
          key: ${{ runner.os }}-local-v1

      - name: Cache Stack
        id: cache-stack
        uses: actions/cache@v1
        with:
          path: ~/.stack
          key: ${{ runner.os }}-stack-v1

      - name: Cache Cabal
        id: cache-cabal
        uses: actions/cache@v1
        with:
          path: ~/.cabal
          key: ${{ runner.os }}-cabal-v1

      - name: Build Binaries
        run: |
          .github/scripts/install-solc.sh
          .github/scripts/install-crytic-compile.sh
        env:
          HOST_OS: ${{ runner.os }}

      - name: Build Libraries
        run: |
          .github/scripts/install-libsecp256k1.sh
          .github/scripts/install-libff.sh
        env:
          HOST_OS: ${{ runner.os }}

      - name: Build Dependencies
        run: |
          stack build --ghc-options="-Werror" --extra-include-dirs=$HOME/.local/include --extra-lib-dirs=$HOME/.local/lib --only-dependencies

      - name: Build and install echidna
        run: |
          stack install --ghc-options="-Werror" --extra-include-dirs=$HOME/.local/include --extra-lib-dirs=$HOME/.local/lib

      - name: Test
        if: runner.os == 'Linux'
        run: |
          export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:$HOME/.local/lib"
          export PATH="${PATH}:$HOME/.local/bin"

          for VER in "0.4.25" "0.5.7" ; do
            cp "$HOME/.local/bin/solc-$VER" "$HOME/.local/bin/solc"
            stack test --ghc-options="-Werror" --extra-include-dirs=$HOME/.local/include --extra-lib-dirs=$HOME/.local/lib
          done

      - name: Compress binary
        run: GZIP=-9 tar -czf echidna-test.tar.gz $HOME/.local/bin/echidna-test

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: echidna-test-${{ runner.os }}
          path: echidna-test.tar.gz
